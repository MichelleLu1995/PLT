State 0:
program' -> . program [ # ]
-- On program shift to state 1
-- On decls shift to state 2
-- On VOID reduce production decls -> 
-- On STRING reduce production decls -> 
-- On ROW reduce production decls -> 
-- On MATRIX reduce production decls -> 
-- On INT reduce production decls -> 
-- On FLOAT reduce production decls -> 
-- On FILE reduce production decls -> 
-- On EOF reduce production decls -> 
-- On DEF reduce production decls -> 
-- On BOOL reduce production decls -> 

State 1:
program' -> program . [ # ]
-- On # accept program

State 2:
decls -> decls . vdecl [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
decls -> decls . fdecl [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
program -> decls . EOF [ # ]
-- On VOID shift to state 3
-- On STRING shift to state 4
-- On ROW shift to state 5
-- On MATRIX shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FILE shift to state 9
-- On EOF shift to state 10
-- On DEF shift to state 11
-- On BOOL shift to state 12
-- On vdecl shift to state 189
-- On typ shift to state 36
-- On tuple_typ shift to state 18
-- On row_typ shift to state 19
-- On primitive shift to state 20
-- On matrix_typ shift to state 30
-- On fdecl shift to state 190

State 3:
primitive -> VOID . [ LSQBRACE LPERCENT ID ]
-- On LSQBRACE reduce production primitive -> VOID 
-- On LPERCENT reduce production primitive -> VOID 
-- On ID reduce production primitive -> VOID 

State 4:
primitive -> STRING . [ LSQBRACE LPERCENT ID ]
-- On LSQBRACE reduce production primitive -> STRING 
-- On LPERCENT reduce production primitive -> STRING 
-- On ID reduce production primitive -> STRING 

State 5:
typ -> ROW . [ ID ]
-- On ID reduce production typ -> ROW 

State 6:
typ -> MATRIX . [ ID ]
-- On ID reduce production typ -> MATRIX 

State 7:
primitive -> INT . [ LSQBRACE LPERCENT ID ]
-- On LSQBRACE reduce production primitive -> INT 
-- On LPERCENT reduce production primitive -> INT 
-- On ID reduce production primitive -> INT 

State 8:
primitive -> FLOAT . [ LSQBRACE LPERCENT ID ]
-- On LSQBRACE reduce production primitive -> FLOAT 
-- On LPERCENT reduce production primitive -> FLOAT 
-- On ID reduce production primitive -> FLOAT 

State 9:
typ -> FILE . [ ID ]
-- On ID reduce production typ -> FILE 

State 10:
program -> decls EOF . [ # ]
-- On # reduce production program -> decls EOF 

State 11:
fdecl -> DEF . typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On VOID shift to state 3
-- On STRING shift to state 4
-- On ROW shift to state 5
-- On MATRIX shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FILE shift to state 9
-- On BOOL shift to state 12
-- On typ shift to state 13
-- On tuple_typ shift to state 18
-- On row_typ shift to state 19
-- On primitive shift to state 20
-- On matrix_typ shift to state 30

State 12:
primitive -> BOOL . [ LSQBRACE LPERCENT ID ]
-- On LSQBRACE reduce production primitive -> BOOL 
-- On LPERCENT reduce production primitive -> BOOL 
-- On ID reduce production primitive -> BOOL 

State 13:
fdecl -> DEF typ . ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On ID shift to state 14

State 14:
fdecl -> DEF typ ID . LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On LPAREN shift to state 15

State 15:
fdecl -> DEF typ ID LPAREN . formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On VOID shift to state 3
-- On STRING shift to state 4
-- On ROW shift to state 5
-- On MATRIX shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FILE shift to state 9
-- On BOOL shift to state 12
-- On typ shift to state 16
-- On tuple_typ shift to state 18
-- On row_typ shift to state 19
-- On primitive shift to state 20
-- On matrix_typ shift to state 30
-- On formals_opt shift to state 31
-- On formal_list shift to state 185
-- On RPAREN reduce production formals_opt -> 

State 16:
formal_list -> typ . ID [ RPAREN COMMA ]
-- On ID shift to state 17

State 17:
formal_list -> typ ID . [ RPAREN COMMA ]
-- On RPAREN reduce production formal_list -> typ ID 
-- On COMMA reduce production formal_list -> typ ID 

State 18:
primitive -> tuple_typ . [ LSQBRACE LPERCENT ID ]
-- On LSQBRACE reduce production primitive -> tuple_typ 
-- On LPERCENT reduce production primitive -> tuple_typ 
-- On ID reduce production primitive -> tuple_typ 

State 19:
typ -> row_typ . [ ID ]
-- On ID reduce production typ -> row_typ 

State 20:
matrix_typ -> primitive . LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE [ ID ]
row_typ -> primitive . LSQBRACE INT_LIT RSQBRACE [ ID ]
tuple_typ -> primitive . LPERCENT INT_LIT RPERCENT [ LSQBRACE LPERCENT ID ]
typ -> primitive . [ ID ]
-- On LSQBRACE shift to state 21
-- On LPERCENT shift to state 27
-- On ID reduce production typ -> primitive 

State 21:
matrix_typ -> primitive LSQBRACE . INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE [ ID ]
row_typ -> primitive LSQBRACE . INT_LIT RSQBRACE [ ID ]
-- On INT_LIT shift to state 22

State 22:
matrix_typ -> primitive LSQBRACE INT_LIT . RSQBRACE LSQBRACE INT_LIT RSQBRACE [ ID ]
row_typ -> primitive LSQBRACE INT_LIT . RSQBRACE [ ID ]
-- On RSQBRACE shift to state 23

State 23:
matrix_typ -> primitive LSQBRACE INT_LIT RSQBRACE . LSQBRACE INT_LIT RSQBRACE [ ID ]
row_typ -> primitive LSQBRACE INT_LIT RSQBRACE . [ ID ]
-- On LSQBRACE shift to state 24
-- On ID reduce production row_typ -> primitive LSQBRACE INT_LIT RSQBRACE 

State 24:
matrix_typ -> primitive LSQBRACE INT_LIT RSQBRACE LSQBRACE . INT_LIT RSQBRACE [ ID ]
-- On INT_LIT shift to state 25

State 25:
matrix_typ -> primitive LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT . RSQBRACE [ ID ]
-- On RSQBRACE shift to state 26

State 26:
matrix_typ -> primitive LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE . [ ID ]
-- On ID reduce production matrix_typ -> primitive LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 

State 27:
tuple_typ -> primitive LPERCENT . INT_LIT RPERCENT [ LSQBRACE LPERCENT ID ]
-- On INT_LIT shift to state 28

State 28:
tuple_typ -> primitive LPERCENT INT_LIT . RPERCENT [ LSQBRACE LPERCENT ID ]
-- On RPERCENT shift to state 29

State 29:
tuple_typ -> primitive LPERCENT INT_LIT RPERCENT . [ LSQBRACE LPERCENT ID ]
-- On LSQBRACE reduce production tuple_typ -> primitive LPERCENT INT_LIT RPERCENT 
-- On LPERCENT reduce production tuple_typ -> primitive LPERCENT INT_LIT RPERCENT 
-- On ID reduce production tuple_typ -> primitive LPERCENT INT_LIT RPERCENT 

State 30:
typ -> matrix_typ . [ ID ]
-- On ID reduce production typ -> matrix_typ 

State 31:
fdecl -> DEF typ ID LPAREN formals_opt . RPAREN LBRACE vdecl_list stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On RPAREN shift to state 32

State 32:
fdecl -> DEF typ ID LPAREN formals_opt RPAREN . LBRACE vdecl_list stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On LBRACE shift to state 33

State 33:
fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE . vdecl_list stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On vdecl_list shift to state 34
-- On WHILE reduce production vdecl_list -> 
-- On VOID reduce production vdecl_list -> 
-- On TRUE reduce production vdecl_list -> 
-- On STRING_LIT reduce production vdecl_list -> 
-- On STRING reduce production vdecl_list -> 
-- On ROW reduce production vdecl_list -> 
-- On RETURN reduce production vdecl_list -> 
-- On RBRACE reduce production vdecl_list -> 
-- On NOT reduce production vdecl_list -> 
-- On MINUS reduce production vdecl_list -> 
-- On MATRIX reduce production vdecl_list -> 
-- On LSQBRACE reduce production vdecl_list -> 
-- On LPERCENT reduce production vdecl_list -> 
-- On LPAREN reduce production vdecl_list -> 
-- On LMPERCENT reduce production vdecl_list -> 
-- On LBRACE reduce production vdecl_list -> 
-- On INT_LIT reduce production vdecl_list -> 
-- On INT reduce production vdecl_list -> 
-- On IF reduce production vdecl_list -> 
-- On ID reduce production vdecl_list -> 
-- On FOR reduce production vdecl_list -> 
-- On FLOAT_LIT reduce production vdecl_list -> 
-- On FLOAT reduce production vdecl_list -> 
-- On FILE reduce production vdecl_list -> 
-- On FALSE reduce production vdecl_list -> 
-- On BOOL reduce production vdecl_list -> 

State 34:
fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list . stmt_list RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
vdecl_list -> vdecl_list . vdecl [ WHILE VOID TRUE STRING_LIT STRING ROW RETURN RBRACE NOT MINUS MATRIX LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT INT IF ID FOR FLOAT_LIT FLOAT FILE FALSE BOOL ]
-- On VOID shift to state 3
-- On STRING shift to state 4
-- On ROW shift to state 5
-- On MATRIX shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FILE shift to state 9
-- On BOOL shift to state 12
-- On vdecl shift to state 35
-- On typ shift to state 36
-- On tuple_typ shift to state 18
-- On stmt_list shift to state 39
-- On row_typ shift to state 19
-- On primitive shift to state 20
-- On matrix_typ shift to state 30
-- On WHILE reduce production stmt_list -> 
-- On TRUE reduce production stmt_list -> 
-- On STRING_LIT reduce production stmt_list -> 
-- On RETURN reduce production stmt_list -> 
-- On RBRACE reduce production stmt_list -> 
-- On NOT reduce production stmt_list -> 
-- On MINUS reduce production stmt_list -> 
-- On LSQBRACE reduce production stmt_list -> 
-- On LPERCENT reduce production stmt_list -> 
-- On LPAREN reduce production stmt_list -> 
-- On LMPERCENT reduce production stmt_list -> 
-- On LBRACE reduce production stmt_list -> 
-- On INT_LIT reduce production stmt_list -> 
-- On IF reduce production stmt_list -> 
-- On ID reduce production stmt_list -> 
-- On FOR reduce production stmt_list -> 
-- On FLOAT_LIT reduce production stmt_list -> 
-- On FALSE reduce production stmt_list -> 

State 35:
vdecl_list -> vdecl_list vdecl . [ WHILE VOID TRUE STRING_LIT STRING ROW RETURN RBRACE NOT MINUS MATRIX LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT INT IF ID FOR FLOAT_LIT FLOAT FILE FALSE BOOL ]
-- On WHILE reduce production vdecl_list -> vdecl_list vdecl 
-- On VOID reduce production vdecl_list -> vdecl_list vdecl 
-- On TRUE reduce production vdecl_list -> vdecl_list vdecl 
-- On STRING_LIT reduce production vdecl_list -> vdecl_list vdecl 
-- On STRING reduce production vdecl_list -> vdecl_list vdecl 
-- On ROW reduce production vdecl_list -> vdecl_list vdecl 
-- On RETURN reduce production vdecl_list -> vdecl_list vdecl 
-- On RBRACE reduce production vdecl_list -> vdecl_list vdecl 
-- On NOT reduce production vdecl_list -> vdecl_list vdecl 
-- On MINUS reduce production vdecl_list -> vdecl_list vdecl 
-- On MATRIX reduce production vdecl_list -> vdecl_list vdecl 
-- On LSQBRACE reduce production vdecl_list -> vdecl_list vdecl 
-- On LPERCENT reduce production vdecl_list -> vdecl_list vdecl 
-- On LPAREN reduce production vdecl_list -> vdecl_list vdecl 
-- On LMPERCENT reduce production vdecl_list -> vdecl_list vdecl 
-- On LBRACE reduce production vdecl_list -> vdecl_list vdecl 
-- On INT_LIT reduce production vdecl_list -> vdecl_list vdecl 
-- On INT reduce production vdecl_list -> vdecl_list vdecl 
-- On IF reduce production vdecl_list -> vdecl_list vdecl 
-- On ID reduce production vdecl_list -> vdecl_list vdecl 
-- On FOR reduce production vdecl_list -> vdecl_list vdecl 
-- On FLOAT_LIT reduce production vdecl_list -> vdecl_list vdecl 
-- On FLOAT reduce production vdecl_list -> vdecl_list vdecl 
-- On FILE reduce production vdecl_list -> vdecl_list vdecl 
-- On FALSE reduce production vdecl_list -> vdecl_list vdecl 
-- On BOOL reduce production vdecl_list -> vdecl_list vdecl 

State 36:
vdecl -> typ . ID SEMI [ WHILE VOID TRUE STRING_LIT STRING ROW RETURN RBRACE NOT MINUS MATRIX LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT INT IF ID FOR FLOAT_LIT FLOAT FILE FALSE EOF DEF BOOL ]
-- On ID shift to state 37

State 37:
vdecl -> typ ID . SEMI [ WHILE VOID TRUE STRING_LIT STRING ROW RETURN RBRACE NOT MINUS MATRIX LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT INT IF ID FOR FLOAT_LIT FLOAT FILE FALSE EOF DEF BOOL ]
-- On SEMI shift to state 38

State 38:
vdecl -> typ ID SEMI . [ WHILE VOID TRUE STRING_LIT STRING ROW RETURN RBRACE NOT MINUS MATRIX LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT INT IF ID FOR FLOAT_LIT FLOAT FILE FALSE EOF DEF BOOL ]
-- On WHILE reduce production vdecl -> typ ID SEMI 
-- On VOID reduce production vdecl -> typ ID SEMI 
-- On TRUE reduce production vdecl -> typ ID SEMI 
-- On STRING_LIT reduce production vdecl -> typ ID SEMI 
-- On STRING reduce production vdecl -> typ ID SEMI 
-- On ROW reduce production vdecl -> typ ID SEMI 
-- On RETURN reduce production vdecl -> typ ID SEMI 
-- On RBRACE reduce production vdecl -> typ ID SEMI 
-- On NOT reduce production vdecl -> typ ID SEMI 
-- On MINUS reduce production vdecl -> typ ID SEMI 
-- On MATRIX reduce production vdecl -> typ ID SEMI 
-- On LSQBRACE reduce production vdecl -> typ ID SEMI 
-- On LPERCENT reduce production vdecl -> typ ID SEMI 
-- On LPAREN reduce production vdecl -> typ ID SEMI 
-- On LMPERCENT reduce production vdecl -> typ ID SEMI 
-- On LBRACE reduce production vdecl -> typ ID SEMI 
-- On INT_LIT reduce production vdecl -> typ ID SEMI 
-- On INT reduce production vdecl -> typ ID SEMI 
-- On IF reduce production vdecl -> typ ID SEMI 
-- On ID reduce production vdecl -> typ ID SEMI 
-- On FOR reduce production vdecl -> typ ID SEMI 
-- On FLOAT_LIT reduce production vdecl -> typ ID SEMI 
-- On FLOAT reduce production vdecl -> typ ID SEMI 
-- On FILE reduce production vdecl -> typ ID SEMI 
-- On FALSE reduce production vdecl -> typ ID SEMI 
-- On EOF reduce production vdecl -> typ ID SEMI 
-- On DEF reduce production vdecl -> typ ID SEMI 
-- On BOOL reduce production vdecl -> typ ID SEMI 

State 39:
fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list . RBRACE [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
stmt_list -> stmt_list . stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ]
-- On WHILE shift to state 40
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On RETURN shift to state 151
-- On RBRACE shift to state 184
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On LBRACE shift to state 155
-- On INT_LIT shift to state 48
-- On IF shift to state 158
-- On ID shift to state 78
-- On FOR shift to state 162
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On stmt shift to state 182
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 171

State 40:
stmt -> WHILE . LPAREN expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On LPAREN shift to state 41

State 41:
stmt -> WHILE LPAREN . expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 149

State 42:
primitives -> TRUE . [ TIMES SEMI RSQBRACE RPERCENT RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On TIMES reduce production primitives -> TRUE 
-- On SEMI reduce production primitives -> TRUE 
-- On RSQBRACE reduce production primitives -> TRUE 
-- On RPERCENT reduce production primitives -> TRUE 
-- On RPAREN reduce production primitives -> TRUE 
-- On RMPERCENT reduce production primitives -> TRUE 
-- On PLUSEQ reduce production primitives -> TRUE 
-- On PLUS reduce production primitives -> TRUE 
-- On OR reduce production primitives -> TRUE 
-- On NEQ reduce production primitives -> TRUE 
-- On MTIMES reduce production primitives -> TRUE 
-- On MPLUS reduce production primitives -> TRUE 
-- On MMINUS reduce production primitives -> TRUE 
-- On MINUS reduce production primitives -> TRUE 
-- On MEQ reduce production primitives -> TRUE 
-- On MDIVIDE reduce production primitives -> TRUE 
-- On LT reduce production primitives -> TRUE 
-- On LEQ reduce production primitives -> TRUE 
-- On IN reduce production primitives -> TRUE 
-- On GT reduce production primitives -> TRUE 
-- On GEQ reduce production primitives -> TRUE 
-- On EQ reduce production primitives -> TRUE 
-- On DIVIDE reduce production primitives -> TRUE 
-- On COMMA reduce production primitives -> TRUE 
-- On BAR reduce production primitives -> TRUE 
-- On ASSIGN reduce production primitives -> TRUE 
-- On AND reduce production primitives -> TRUE 

State 43:
primitives -> STRING_LIT . [ TIMES SEMI RSQBRACE RPERCENT RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On TIMES reduce production primitives -> STRING_LIT 
-- On SEMI reduce production primitives -> STRING_LIT 
-- On RSQBRACE reduce production primitives -> STRING_LIT 
-- On RPERCENT reduce production primitives -> STRING_LIT 
-- On RPAREN reduce production primitives -> STRING_LIT 
-- On RMPERCENT reduce production primitives -> STRING_LIT 
-- On PLUSEQ reduce production primitives -> STRING_LIT 
-- On PLUS reduce production primitives -> STRING_LIT 
-- On OR reduce production primitives -> STRING_LIT 
-- On NEQ reduce production primitives -> STRING_LIT 
-- On MTIMES reduce production primitives -> STRING_LIT 
-- On MPLUS reduce production primitives -> STRING_LIT 
-- On MMINUS reduce production primitives -> STRING_LIT 
-- On MINUS reduce production primitives -> STRING_LIT 
-- On MEQ reduce production primitives -> STRING_LIT 
-- On MDIVIDE reduce production primitives -> STRING_LIT 
-- On LT reduce production primitives -> STRING_LIT 
-- On LEQ reduce production primitives -> STRING_LIT 
-- On IN reduce production primitives -> STRING_LIT 
-- On GT reduce production primitives -> STRING_LIT 
-- On GEQ reduce production primitives -> STRING_LIT 
-- On EQ reduce production primitives -> STRING_LIT 
-- On DIVIDE reduce production primitives -> STRING_LIT 
-- On COMMA reduce production primitives -> STRING_LIT 
-- On BAR reduce production primitives -> STRING_LIT 
-- On ASSIGN reduce production primitives -> STRING_LIT 
-- On AND reduce production primitives -> STRING_LIT 

State 44:
expr -> NOT . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 148

State 45:
expr -> MINUS . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 147

State 46:
literals -> LSQBRACE . primitive_rowlit RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
literals -> LSQBRACE . tuple_rowlit RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On LPERCENT shift to state 47
-- On INT_LIT shift to state 48
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_rowlit shift to state 56
-- On tuple_literal shift to state 60
-- On primitives shift to state 61
-- On primitive_rowlit shift to state 62

State 47:
tuple_literal -> LPERCENT . array_literal RPERCENT [ TIMES SEMI RSQBRACE RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On INT_LIT shift to state 48
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On primitives shift to state 51
-- On array_literal shift to state 52

State 48:
primitives -> INT_LIT . [ TIMES SEMI RSQBRACE RPERCENT RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On TIMES reduce production primitives -> INT_LIT 
-- On SEMI reduce production primitives -> INT_LIT 
-- On RSQBRACE reduce production primitives -> INT_LIT 
-- On RPERCENT reduce production primitives -> INT_LIT 
-- On RPAREN reduce production primitives -> INT_LIT 
-- On RMPERCENT reduce production primitives -> INT_LIT 
-- On PLUSEQ reduce production primitives -> INT_LIT 
-- On PLUS reduce production primitives -> INT_LIT 
-- On OR reduce production primitives -> INT_LIT 
-- On NEQ reduce production primitives -> INT_LIT 
-- On MTIMES reduce production primitives -> INT_LIT 
-- On MPLUS reduce production primitives -> INT_LIT 
-- On MMINUS reduce production primitives -> INT_LIT 
-- On MINUS reduce production primitives -> INT_LIT 
-- On MEQ reduce production primitives -> INT_LIT 
-- On MDIVIDE reduce production primitives -> INT_LIT 
-- On LT reduce production primitives -> INT_LIT 
-- On LEQ reduce production primitives -> INT_LIT 
-- On IN reduce production primitives -> INT_LIT 
-- On GT reduce production primitives -> INT_LIT 
-- On GEQ reduce production primitives -> INT_LIT 
-- On EQ reduce production primitives -> INT_LIT 
-- On DIVIDE reduce production primitives -> INT_LIT 
-- On COMMA reduce production primitives -> INT_LIT 
-- On BAR reduce production primitives -> INT_LIT 
-- On ASSIGN reduce production primitives -> INT_LIT 
-- On AND reduce production primitives -> INT_LIT 

State 49:
primitives -> FLOAT_LIT . [ TIMES SEMI RSQBRACE RPERCENT RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On TIMES reduce production primitives -> FLOAT_LIT 
-- On SEMI reduce production primitives -> FLOAT_LIT 
-- On RSQBRACE reduce production primitives -> FLOAT_LIT 
-- On RPERCENT reduce production primitives -> FLOAT_LIT 
-- On RPAREN reduce production primitives -> FLOAT_LIT 
-- On RMPERCENT reduce production primitives -> FLOAT_LIT 
-- On PLUSEQ reduce production primitives -> FLOAT_LIT 
-- On PLUS reduce production primitives -> FLOAT_LIT 
-- On OR reduce production primitives -> FLOAT_LIT 
-- On NEQ reduce production primitives -> FLOAT_LIT 
-- On MTIMES reduce production primitives -> FLOAT_LIT 
-- On MPLUS reduce production primitives -> FLOAT_LIT 
-- On MMINUS reduce production primitives -> FLOAT_LIT 
-- On MINUS reduce production primitives -> FLOAT_LIT 
-- On MEQ reduce production primitives -> FLOAT_LIT 
-- On MDIVIDE reduce production primitives -> FLOAT_LIT 
-- On LT reduce production primitives -> FLOAT_LIT 
-- On LEQ reduce production primitives -> FLOAT_LIT 
-- On IN reduce production primitives -> FLOAT_LIT 
-- On GT reduce production primitives -> FLOAT_LIT 
-- On GEQ reduce production primitives -> FLOAT_LIT 
-- On EQ reduce production primitives -> FLOAT_LIT 
-- On DIVIDE reduce production primitives -> FLOAT_LIT 
-- On COMMA reduce production primitives -> FLOAT_LIT 
-- On BAR reduce production primitives -> FLOAT_LIT 
-- On ASSIGN reduce production primitives -> FLOAT_LIT 
-- On AND reduce production primitives -> FLOAT_LIT 

State 50:
primitives -> FALSE . [ TIMES SEMI RSQBRACE RPERCENT RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On TIMES reduce production primitives -> FALSE 
-- On SEMI reduce production primitives -> FALSE 
-- On RSQBRACE reduce production primitives -> FALSE 
-- On RPERCENT reduce production primitives -> FALSE 
-- On RPAREN reduce production primitives -> FALSE 
-- On RMPERCENT reduce production primitives -> FALSE 
-- On PLUSEQ reduce production primitives -> FALSE 
-- On PLUS reduce production primitives -> FALSE 
-- On OR reduce production primitives -> FALSE 
-- On NEQ reduce production primitives -> FALSE 
-- On MTIMES reduce production primitives -> FALSE 
-- On MPLUS reduce production primitives -> FALSE 
-- On MMINUS reduce production primitives -> FALSE 
-- On MINUS reduce production primitives -> FALSE 
-- On MEQ reduce production primitives -> FALSE 
-- On MDIVIDE reduce production primitives -> FALSE 
-- On LT reduce production primitives -> FALSE 
-- On LEQ reduce production primitives -> FALSE 
-- On IN reduce production primitives -> FALSE 
-- On GT reduce production primitives -> FALSE 
-- On GEQ reduce production primitives -> FALSE 
-- On EQ reduce production primitives -> FALSE 
-- On DIVIDE reduce production primitives -> FALSE 
-- On COMMA reduce production primitives -> FALSE 
-- On BAR reduce production primitives -> FALSE 
-- On ASSIGN reduce production primitives -> FALSE 
-- On AND reduce production primitives -> FALSE 

State 51:
array_literal -> primitives . [ RPERCENT COMMA ]
-- On RPERCENT reduce production array_literal -> primitives 
-- On COMMA reduce production array_literal -> primitives 

State 52:
array_literal -> array_literal . COMMA primitives [ RPERCENT COMMA ]
tuple_literal -> LPERCENT array_literal . RPERCENT [ TIMES SEMI RSQBRACE RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On RPERCENT shift to state 53
-- On COMMA shift to state 54

State 53:
tuple_literal -> LPERCENT array_literal RPERCENT . [ TIMES SEMI RSQBRACE RPAREN RMPERCENT PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA BAR ASSIGN AND ]
-- On TIMES reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On SEMI reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On RSQBRACE reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On RPAREN reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On RMPERCENT reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On PLUSEQ reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On PLUS reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On OR reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On NEQ reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On MTIMES reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On MPLUS reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On MMINUS reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On MINUS reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On MEQ reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On MDIVIDE reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On LT reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On LEQ reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On IN reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On GT reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On GEQ reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On EQ reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On DIVIDE reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On COMMA reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On BAR reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On ASSIGN reduce production tuple_literal -> LPERCENT array_literal RPERCENT 
-- On AND reduce production tuple_literal -> LPERCENT array_literal RPERCENT 

State 54:
array_literal -> array_literal COMMA . primitives [ RPERCENT COMMA ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On INT_LIT shift to state 48
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On primitives shift to state 55

State 55:
array_literal -> array_literal COMMA primitives . [ RPERCENT COMMA ]
-- On RPERCENT reduce production array_literal -> array_literal COMMA primitives 
-- On COMMA reduce production array_literal -> array_literal COMMA primitives 

State 56:
literals -> LSQBRACE tuple_rowlit . RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
tuple_rowlit -> tuple_rowlit . COMMA tuple_literal [ RSQBRACE COMMA ]
-- On RSQBRACE shift to state 57
-- On COMMA shift to state 58

State 57:
literals -> LSQBRACE tuple_rowlit RSQBRACE . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On SEMI reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On RSQBRACE reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On RPAREN reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On PLUSEQ reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On PLUS reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On OR reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On NEQ reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On MTIMES reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On MPLUS reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On MMINUS reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On MINUS reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On MEQ reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On MDIVIDE reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On LT reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On LEQ reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On IN reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On GT reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On GEQ reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On EQ reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On DIVIDE reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On COMMA reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On ASSIGN reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 
-- On AND reduce production literals -> LSQBRACE tuple_rowlit RSQBRACE 

State 58:
tuple_rowlit -> tuple_rowlit COMMA . tuple_literal [ RSQBRACE RMPERCENT COMMA BAR ]
-- On LPERCENT shift to state 47
-- On tuple_literal shift to state 59

State 59:
tuple_rowlit -> tuple_rowlit COMMA tuple_literal . [ RSQBRACE RMPERCENT COMMA BAR ]
-- On RSQBRACE reduce production tuple_rowlit -> tuple_rowlit COMMA tuple_literal 
-- On RMPERCENT reduce production tuple_rowlit -> tuple_rowlit COMMA tuple_literal 
-- On COMMA reduce production tuple_rowlit -> tuple_rowlit COMMA tuple_literal 
-- On BAR reduce production tuple_rowlit -> tuple_rowlit COMMA tuple_literal 

State 60:
tuple_rowlit -> tuple_literal . [ RSQBRACE RMPERCENT COMMA BAR ]
-- On RSQBRACE reduce production tuple_rowlit -> tuple_literal 
-- On RMPERCENT reduce production tuple_rowlit -> tuple_literal 
-- On COMMA reduce production tuple_rowlit -> tuple_literal 
-- On BAR reduce production tuple_rowlit -> tuple_literal 

State 61:
primitive_rowlit -> primitives . [ RSQBRACE RMPERCENT COMMA BAR ]
-- On RSQBRACE reduce production primitive_rowlit -> primitives 
-- On RMPERCENT reduce production primitive_rowlit -> primitives 
-- On COMMA reduce production primitive_rowlit -> primitives 
-- On BAR reduce production primitive_rowlit -> primitives 

State 62:
literals -> LSQBRACE primitive_rowlit . RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
primitive_rowlit -> primitive_rowlit . COMMA primitives [ RSQBRACE COMMA ]
-- On RSQBRACE shift to state 63
-- On COMMA shift to state 64

State 63:
literals -> LSQBRACE primitive_rowlit RSQBRACE . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On SEMI reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On RSQBRACE reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On RPAREN reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On PLUSEQ reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On PLUS reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On OR reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On NEQ reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On MTIMES reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On MPLUS reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On MMINUS reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On MINUS reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On MEQ reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On MDIVIDE reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On LT reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On LEQ reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On IN reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On GT reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On GEQ reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On EQ reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On DIVIDE reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On COMMA reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On ASSIGN reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 
-- On AND reduce production literals -> LSQBRACE primitive_rowlit RSQBRACE 

State 64:
primitive_rowlit -> primitive_rowlit COMMA . primitives [ RSQBRACE RMPERCENT COMMA BAR ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On INT_LIT shift to state 48
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On primitives shift to state 65

State 65:
primitive_rowlit -> primitive_rowlit COMMA primitives . [ RSQBRACE RMPERCENT COMMA BAR ]
-- On RSQBRACE reduce production primitive_rowlit -> primitive_rowlit COMMA primitives 
-- On RMPERCENT reduce production primitive_rowlit -> primitive_rowlit COMMA primitives 
-- On COMMA reduce production primitive_rowlit -> primitive_rowlit COMMA primitives 
-- On BAR reduce production primitive_rowlit -> primitive_rowlit COMMA primitives 

State 66:
expr -> LPAREN . expr RPAREN [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 145

State 67:
literals -> LMPERCENT . primitive_matrixlit RMPERCENT [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
literals -> LMPERCENT . tuple_matrixlit RMPERCENT [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On LPERCENT shift to state 47
-- On INT_LIT shift to state 48
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_rowlit shift to state 68
-- On tuple_matrixlit shift to state 69
-- On tuple_literal shift to state 60
-- On primitives shift to state 61
-- On primitive_rowlit shift to state 73
-- On primitive_matrixlit shift to state 74

State 68:
tuple_matrixlit -> tuple_rowlit . [ RMPERCENT BAR ]
tuple_rowlit -> tuple_rowlit . COMMA tuple_literal [ RMPERCENT COMMA BAR ]
-- On COMMA shift to state 58
-- On RMPERCENT reduce production tuple_matrixlit -> tuple_rowlit 
-- On BAR reduce production tuple_matrixlit -> tuple_rowlit 

State 69:
literals -> LMPERCENT tuple_matrixlit . RMPERCENT [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
tuple_matrixlit -> tuple_matrixlit . BAR tuple_rowlit [ RMPERCENT BAR ]
-- On RMPERCENT shift to state 70
-- On BAR shift to state 71

State 70:
literals -> LMPERCENT tuple_matrixlit RMPERCENT . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On SEMI reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On RSQBRACE reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On RPAREN reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On PLUSEQ reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On PLUS reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On OR reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On NEQ reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On MTIMES reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On MPLUS reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On MMINUS reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On MINUS reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On MEQ reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On MDIVIDE reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On LT reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On LEQ reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On IN reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On GT reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On GEQ reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On EQ reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On DIVIDE reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On COMMA reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On ASSIGN reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 
-- On AND reduce production literals -> LMPERCENT tuple_matrixlit RMPERCENT 

State 71:
tuple_matrixlit -> tuple_matrixlit BAR . tuple_rowlit [ RMPERCENT BAR ]
-- On LPERCENT shift to state 47
-- On tuple_rowlit shift to state 72
-- On tuple_literal shift to state 60

State 72:
tuple_matrixlit -> tuple_matrixlit BAR tuple_rowlit . [ RMPERCENT BAR ]
tuple_rowlit -> tuple_rowlit . COMMA tuple_literal [ RMPERCENT COMMA BAR ]
-- On COMMA shift to state 58
-- On RMPERCENT reduce production tuple_matrixlit -> tuple_matrixlit BAR tuple_rowlit 
-- On BAR reduce production tuple_matrixlit -> tuple_matrixlit BAR tuple_rowlit 

State 73:
primitive_matrixlit -> primitive_rowlit . [ RMPERCENT BAR ]
primitive_rowlit -> primitive_rowlit . COMMA primitives [ RMPERCENT COMMA BAR ]
-- On COMMA shift to state 64
-- On RMPERCENT reduce production primitive_matrixlit -> primitive_rowlit 
-- On BAR reduce production primitive_matrixlit -> primitive_rowlit 

State 74:
literals -> LMPERCENT primitive_matrixlit . RMPERCENT [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
primitive_matrixlit -> primitive_matrixlit . BAR primitive_rowlit [ RMPERCENT BAR ]
-- On RMPERCENT shift to state 75
-- On BAR shift to state 76

State 75:
literals -> LMPERCENT primitive_matrixlit RMPERCENT . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On SEMI reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On RSQBRACE reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On RPAREN reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On PLUSEQ reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On PLUS reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On OR reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On NEQ reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On MTIMES reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On MPLUS reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On MMINUS reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On MINUS reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On MEQ reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On MDIVIDE reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On LT reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On LEQ reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On IN reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On GT reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On GEQ reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On EQ reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On DIVIDE reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On COMMA reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On ASSIGN reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 
-- On AND reduce production literals -> LMPERCENT primitive_matrixlit RMPERCENT 

State 76:
primitive_matrixlit -> primitive_matrixlit BAR . primitive_rowlit [ RMPERCENT BAR ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On INT_LIT shift to state 48
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On primitives shift to state 61
-- On primitive_rowlit shift to state 77

State 77:
primitive_matrixlit -> primitive_matrixlit BAR primitive_rowlit . [ RMPERCENT BAR ]
primitive_rowlit -> primitive_rowlit . COMMA primitives [ RMPERCENT COMMA BAR ]
-- On COMMA shift to state 64
-- On RMPERCENT reduce production primitive_matrixlit -> primitive_matrixlit BAR primitive_rowlit 
-- On BAR reduce production primitive_matrixlit -> primitive_matrixlit BAR primitive_rowlit 

State 78:
expr -> ID . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID . LPAREN actuals_opt RPAREN [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID . LSQBRACE expr RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID . LPERCENT INT_LIT RPERCENT [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID . LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID . LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID . LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On LSQBRACE shift to state 79
-- On LPERCENT shift to state 135
-- On LPAREN shift to state 138
-- On TIMES reduce production expr -> ID 
-- On SEMI reduce production expr -> ID 
-- On RSQBRACE reduce production expr -> ID 
-- On RPAREN reduce production expr -> ID 
-- On PLUSEQ reduce production expr -> ID 
-- On PLUS reduce production expr -> ID 
-- On OR reduce production expr -> ID 
-- On NEQ reduce production expr -> ID 
-- On MTIMES reduce production expr -> ID 
-- On MPLUS reduce production expr -> ID 
-- On MMINUS reduce production expr -> ID 
-- On MINUS reduce production expr -> ID 
-- On MEQ reduce production expr -> ID 
-- On MDIVIDE reduce production expr -> ID 
-- On LT reduce production expr -> ID 
-- On LEQ reduce production expr -> ID 
-- On IN reduce production expr -> ID 
-- On GT reduce production expr -> ID 
-- On GEQ reduce production expr -> ID 
-- On EQ reduce production expr -> ID 
-- On DIVIDE reduce production expr -> ID 
-- On COMMA reduce production expr -> ID 
-- On ASSIGN reduce production expr -> ID 
-- On AND reduce production expr -> ID 

State 79:
expr -> ID LSQBRACE . expr RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID LSQBRACE . INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID LSQBRACE . INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID LSQBRACE . COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 80
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On COLON shift to state 87
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 95

State 80:
expr -> ID LSQBRACE INT_LIT . RSQBRACE LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID LSQBRACE INT_LIT . RSQBRACE LSQBRACE COLON RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
primitives -> INT_LIT . [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
-- On RSQBRACE shift to state 81
-- On TIMES reduce production primitives -> INT_LIT 
-- On RSQBRACE reduce production primitives -> INT_LIT 
-- On PLUSEQ reduce production primitives -> INT_LIT 
-- On PLUS reduce production primitives -> INT_LIT 
-- On OR reduce production primitives -> INT_LIT 
-- On NEQ reduce production primitives -> INT_LIT 
-- On MTIMES reduce production primitives -> INT_LIT 
-- On MPLUS reduce production primitives -> INT_LIT 
-- On MMINUS reduce production primitives -> INT_LIT 
-- On MINUS reduce production primitives -> INT_LIT 
-- On MEQ reduce production primitives -> INT_LIT 
-- On MDIVIDE reduce production primitives -> INT_LIT 
-- On LT reduce production primitives -> INT_LIT 
-- On LEQ reduce production primitives -> INT_LIT 
-- On GT reduce production primitives -> INT_LIT 
-- On GEQ reduce production primitives -> INT_LIT 
-- On EQ reduce production primitives -> INT_LIT 
-- On DIVIDE reduce production primitives -> INT_LIT 
-- On ASSIGN reduce production primitives -> INT_LIT 
-- On AND reduce production primitives -> INT_LIT 
** Conflict on RSQBRACE

State 81:
expr -> ID LSQBRACE INT_LIT RSQBRACE . LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID LSQBRACE INT_LIT RSQBRACE . LSQBRACE COLON RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On LSQBRACE shift to state 82

State 82:
expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE . INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE . COLON RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On INT_LIT shift to state 83
-- On COLON shift to state 85

State 83:
expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT . RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On RSQBRACE shift to state 84

State 84:
expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On SEMI reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On RSQBRACE reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On RPAREN reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On PLUSEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On PLUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On OR reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On NEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MTIMES reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MPLUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MMINUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MINUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MDIVIDE reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On LT reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On LEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On IN reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On GT reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On GEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On EQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On DIVIDE reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On COMMA reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On ASSIGN reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On AND reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE INT_LIT RSQBRACE 

State 85:
expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON . RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On RSQBRACE shift to state 86

State 86:
expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On SEMI reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On RSQBRACE reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On RPAREN reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On PLUSEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On PLUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On OR reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On NEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On MTIMES reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On MPLUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On MMINUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On MINUS reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On MEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On MDIVIDE reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On LT reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On LEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On IN reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On GT reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On GEQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On EQ reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On DIVIDE reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On COMMA reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On ASSIGN reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 
-- On AND reduce production expr -> ID LSQBRACE INT_LIT RSQBRACE LSQBRACE COLON RSQBRACE 

State 87:
expr -> ID LSQBRACE COLON . RSQBRACE LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On RSQBRACE shift to state 88

State 88:
expr -> ID LSQBRACE COLON RSQBRACE . LSQBRACE INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On LSQBRACE shift to state 89

State 89:
expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE . INT_LIT RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On INT_LIT shift to state 90

State 90:
expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT . RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On RSQBRACE shift to state 91

State 91:
expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On SEMI reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On RSQBRACE reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On RPAREN reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On PLUSEQ reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On PLUS reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On OR reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On NEQ reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MTIMES reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MPLUS reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MMINUS reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MINUS reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MEQ reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On MDIVIDE reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On LT reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On LEQ reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On IN reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On GT reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On GEQ reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On EQ reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On DIVIDE reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On COMMA reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On ASSIGN reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 
-- On AND reduce production expr -> ID LSQBRACE COLON RSQBRACE LSQBRACE INT_LIT RSQBRACE 

State 92:
literals -> tuple_literal . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production literals -> tuple_literal 
-- On SEMI reduce production literals -> tuple_literal 
-- On RSQBRACE reduce production literals -> tuple_literal 
-- On RPAREN reduce production literals -> tuple_literal 
-- On PLUSEQ reduce production literals -> tuple_literal 
-- On PLUS reduce production literals -> tuple_literal 
-- On OR reduce production literals -> tuple_literal 
-- On NEQ reduce production literals -> tuple_literal 
-- On MTIMES reduce production literals -> tuple_literal 
-- On MPLUS reduce production literals -> tuple_literal 
-- On MMINUS reduce production literals -> tuple_literal 
-- On MINUS reduce production literals -> tuple_literal 
-- On MEQ reduce production literals -> tuple_literal 
-- On MDIVIDE reduce production literals -> tuple_literal 
-- On LT reduce production literals -> tuple_literal 
-- On LEQ reduce production literals -> tuple_literal 
-- On IN reduce production literals -> tuple_literal 
-- On GT reduce production literals -> tuple_literal 
-- On GEQ reduce production literals -> tuple_literal 
-- On EQ reduce production literals -> tuple_literal 
-- On DIVIDE reduce production literals -> tuple_literal 
-- On COMMA reduce production literals -> tuple_literal 
-- On ASSIGN reduce production literals -> tuple_literal 
-- On AND reduce production literals -> tuple_literal 

State 93:
literals -> primitives . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production literals -> primitives 
-- On SEMI reduce production literals -> primitives 
-- On RSQBRACE reduce production literals -> primitives 
-- On RPAREN reduce production literals -> primitives 
-- On PLUSEQ reduce production literals -> primitives 
-- On PLUS reduce production literals -> primitives 
-- On OR reduce production literals -> primitives 
-- On NEQ reduce production literals -> primitives 
-- On MTIMES reduce production literals -> primitives 
-- On MPLUS reduce production literals -> primitives 
-- On MMINUS reduce production literals -> primitives 
-- On MINUS reduce production literals -> primitives 
-- On MEQ reduce production literals -> primitives 
-- On MDIVIDE reduce production literals -> primitives 
-- On LT reduce production literals -> primitives 
-- On LEQ reduce production literals -> primitives 
-- On IN reduce production literals -> primitives 
-- On GT reduce production literals -> primitives 
-- On GEQ reduce production literals -> primitives 
-- On EQ reduce production literals -> primitives 
-- On DIVIDE reduce production literals -> primitives 
-- On COMMA reduce production literals -> primitives 
-- On ASSIGN reduce production literals -> primitives 
-- On AND reduce production literals -> primitives 

State 94:
expr -> literals . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> literals 
-- On SEMI reduce production expr -> literals 
-- On RSQBRACE reduce production expr -> literals 
-- On RPAREN reduce production expr -> literals 
-- On PLUSEQ reduce production expr -> literals 
-- On PLUS reduce production expr -> literals 
-- On OR reduce production expr -> literals 
-- On NEQ reduce production expr -> literals 
-- On MTIMES reduce production expr -> literals 
-- On MPLUS reduce production expr -> literals 
-- On MMINUS reduce production expr -> literals 
-- On MINUS reduce production expr -> literals 
-- On MEQ reduce production expr -> literals 
-- On MDIVIDE reduce production expr -> literals 
-- On LT reduce production expr -> literals 
-- On LEQ reduce production expr -> literals 
-- On IN reduce production expr -> literals 
-- On GT reduce production expr -> literals 
-- On GEQ reduce production expr -> literals 
-- On EQ reduce production expr -> literals 
-- On DIVIDE reduce production expr -> literals 
-- On COMMA reduce production expr -> literals 
-- On ASSIGN reduce production expr -> literals 
-- On AND reduce production expr -> literals 

State 95:
expr -> expr . PLUS expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RSQBRACE PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> ID LSQBRACE expr . RSQBRACE [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On RSQBRACE shift to state 98
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 96:
expr -> expr TIMES . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 97

State 97:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr TIMES expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> expr TIMES expr 
-- On SEMI reduce production expr -> expr TIMES expr 
-- On RSQBRACE reduce production expr -> expr TIMES expr 
-- On RPAREN reduce production expr -> expr TIMES expr 
-- On PLUSEQ reduce production expr -> expr TIMES expr 
-- On PLUS reduce production expr -> expr TIMES expr 
-- On OR reduce production expr -> expr TIMES expr 
-- On NEQ reduce production expr -> expr TIMES expr 
-- On MTIMES reduce production expr -> expr TIMES expr 
-- On MPLUS reduce production expr -> expr TIMES expr 
-- On MMINUS reduce production expr -> expr TIMES expr 
-- On MINUS reduce production expr -> expr TIMES expr 
-- On MEQ reduce production expr -> expr TIMES expr 
-- On MDIVIDE reduce production expr -> expr TIMES expr 
-- On LT reduce production expr -> expr TIMES expr 
-- On LEQ reduce production expr -> expr TIMES expr 
-- On IN reduce production expr -> expr TIMES expr 
-- On GT reduce production expr -> expr TIMES expr 
-- On GEQ reduce production expr -> expr TIMES expr 
-- On EQ reduce production expr -> expr TIMES expr 
-- On DIVIDE reduce production expr -> expr TIMES expr 
-- On COMMA reduce production expr -> expr TIMES expr 
-- On ASSIGN reduce production expr -> expr TIMES expr 
-- On AND reduce production expr -> expr TIMES expr 

State 98:
expr -> ID LSQBRACE expr RSQBRACE . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On SEMI reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On RSQBRACE reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On RPAREN reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On PLUSEQ reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On PLUS reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On OR reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On NEQ reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On MTIMES reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On MPLUS reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On MMINUS reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On MINUS reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On MEQ reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On MDIVIDE reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On LT reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On LEQ reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On IN reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On GT reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On GEQ reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On EQ reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On DIVIDE reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On COMMA reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On ASSIGN reduce production expr -> ID LSQBRACE expr RSQBRACE 
-- On AND reduce production expr -> ID LSQBRACE expr RSQBRACE 

State 99:
expr -> expr PLUSEQ . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 100

State 100:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr PLUSEQ expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On MTIMES shift to state 101
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr PLUSEQ expr 
-- On RSQBRACE reduce production expr -> expr PLUSEQ expr 
-- On RPAREN reduce production expr -> expr PLUSEQ expr 
-- On PLUSEQ reduce production expr -> expr PLUSEQ expr 
-- On PLUS reduce production expr -> expr PLUSEQ expr 
-- On OR reduce production expr -> expr PLUSEQ expr 
-- On NEQ reduce production expr -> expr PLUSEQ expr 
-- On MPLUS reduce production expr -> expr PLUSEQ expr 
-- On MMINUS reduce production expr -> expr PLUSEQ expr 
-- On MINUS reduce production expr -> expr PLUSEQ expr 
-- On MEQ reduce production expr -> expr PLUSEQ expr 
-- On LT reduce production expr -> expr PLUSEQ expr 
-- On LEQ reduce production expr -> expr PLUSEQ expr 
-- On IN reduce production expr -> expr PLUSEQ expr 
-- On GT reduce production expr -> expr PLUSEQ expr 
-- On GEQ reduce production expr -> expr PLUSEQ expr 
-- On EQ reduce production expr -> expr PLUSEQ expr 
-- On COMMA reduce production expr -> expr PLUSEQ expr 
-- On ASSIGN reduce production expr -> expr PLUSEQ expr 
-- On AND reduce production expr -> expr PLUSEQ expr 

State 101:
expr -> expr MTIMES . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 102

State 102:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr MTIMES expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> expr MTIMES expr 
-- On SEMI reduce production expr -> expr MTIMES expr 
-- On RSQBRACE reduce production expr -> expr MTIMES expr 
-- On RPAREN reduce production expr -> expr MTIMES expr 
-- On PLUSEQ reduce production expr -> expr MTIMES expr 
-- On PLUS reduce production expr -> expr MTIMES expr 
-- On OR reduce production expr -> expr MTIMES expr 
-- On NEQ reduce production expr -> expr MTIMES expr 
-- On MTIMES reduce production expr -> expr MTIMES expr 
-- On MPLUS reduce production expr -> expr MTIMES expr 
-- On MMINUS reduce production expr -> expr MTIMES expr 
-- On MINUS reduce production expr -> expr MTIMES expr 
-- On MEQ reduce production expr -> expr MTIMES expr 
-- On MDIVIDE reduce production expr -> expr MTIMES expr 
-- On LT reduce production expr -> expr MTIMES expr 
-- On LEQ reduce production expr -> expr MTIMES expr 
-- On IN reduce production expr -> expr MTIMES expr 
-- On GT reduce production expr -> expr MTIMES expr 
-- On GEQ reduce production expr -> expr MTIMES expr 
-- On EQ reduce production expr -> expr MTIMES expr 
-- On DIVIDE reduce production expr -> expr MTIMES expr 
-- On COMMA reduce production expr -> expr MTIMES expr 
-- On ASSIGN reduce production expr -> expr MTIMES expr 
-- On AND reduce production expr -> expr MTIMES expr 

State 103:
expr -> expr MDIVIDE . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 104

State 104:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr MDIVIDE expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> expr MDIVIDE expr 
-- On SEMI reduce production expr -> expr MDIVIDE expr 
-- On RSQBRACE reduce production expr -> expr MDIVIDE expr 
-- On RPAREN reduce production expr -> expr MDIVIDE expr 
-- On PLUSEQ reduce production expr -> expr MDIVIDE expr 
-- On PLUS reduce production expr -> expr MDIVIDE expr 
-- On OR reduce production expr -> expr MDIVIDE expr 
-- On NEQ reduce production expr -> expr MDIVIDE expr 
-- On MTIMES reduce production expr -> expr MDIVIDE expr 
-- On MPLUS reduce production expr -> expr MDIVIDE expr 
-- On MMINUS reduce production expr -> expr MDIVIDE expr 
-- On MINUS reduce production expr -> expr MDIVIDE expr 
-- On MEQ reduce production expr -> expr MDIVIDE expr 
-- On MDIVIDE reduce production expr -> expr MDIVIDE expr 
-- On LT reduce production expr -> expr MDIVIDE expr 
-- On LEQ reduce production expr -> expr MDIVIDE expr 
-- On IN reduce production expr -> expr MDIVIDE expr 
-- On GT reduce production expr -> expr MDIVIDE expr 
-- On GEQ reduce production expr -> expr MDIVIDE expr 
-- On EQ reduce production expr -> expr MDIVIDE expr 
-- On DIVIDE reduce production expr -> expr MDIVIDE expr 
-- On COMMA reduce production expr -> expr MDIVIDE expr 
-- On ASSIGN reduce production expr -> expr MDIVIDE expr 
-- On AND reduce production expr -> expr MDIVIDE expr 

State 105:
expr -> expr DIVIDE . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 106

State 106:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr DIVIDE expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> expr DIVIDE expr 
-- On SEMI reduce production expr -> expr DIVIDE expr 
-- On RSQBRACE reduce production expr -> expr DIVIDE expr 
-- On RPAREN reduce production expr -> expr DIVIDE expr 
-- On PLUSEQ reduce production expr -> expr DIVIDE expr 
-- On PLUS reduce production expr -> expr DIVIDE expr 
-- On OR reduce production expr -> expr DIVIDE expr 
-- On NEQ reduce production expr -> expr DIVIDE expr 
-- On MTIMES reduce production expr -> expr DIVIDE expr 
-- On MPLUS reduce production expr -> expr DIVIDE expr 
-- On MMINUS reduce production expr -> expr DIVIDE expr 
-- On MINUS reduce production expr -> expr DIVIDE expr 
-- On MEQ reduce production expr -> expr DIVIDE expr 
-- On MDIVIDE reduce production expr -> expr DIVIDE expr 
-- On LT reduce production expr -> expr DIVIDE expr 
-- On LEQ reduce production expr -> expr DIVIDE expr 
-- On IN reduce production expr -> expr DIVIDE expr 
-- On GT reduce production expr -> expr DIVIDE expr 
-- On GEQ reduce production expr -> expr DIVIDE expr 
-- On EQ reduce production expr -> expr DIVIDE expr 
-- On DIVIDE reduce production expr -> expr DIVIDE expr 
-- On COMMA reduce production expr -> expr DIVIDE expr 
-- On ASSIGN reduce production expr -> expr DIVIDE expr 
-- On AND reduce production expr -> expr DIVIDE expr 

State 107:
expr -> expr PLUS . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 108

State 108:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr PLUS expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On MTIMES shift to state 101
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr PLUS expr 
-- On RSQBRACE reduce production expr -> expr PLUS expr 
-- On RPAREN reduce production expr -> expr PLUS expr 
-- On PLUSEQ reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On MPLUS reduce production expr -> expr PLUS expr 
-- On MMINUS reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On MEQ reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LEQ reduce production expr -> expr PLUS expr 
-- On IN reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GEQ reduce production expr -> expr PLUS expr 
-- On EQ reduce production expr -> expr PLUS expr 
-- On COMMA reduce production expr -> expr PLUS expr 
-- On ASSIGN reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 109:
expr -> expr OR . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 110

State 110:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr OR expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On AND shift to state 131
-- On SEMI reduce production expr -> expr OR expr 
-- On RSQBRACE reduce production expr -> expr OR expr 
-- On RPAREN reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On IN reduce production expr -> expr OR expr 
-- On COMMA reduce production expr -> expr OR expr 
-- On ASSIGN reduce production expr -> expr OR expr 

State 111:
expr -> expr NEQ . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 112

State 112:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr NEQ expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr NEQ expr 
-- On RSQBRACE reduce production expr -> expr NEQ expr 
-- On RPAREN reduce production expr -> expr NEQ expr 
-- On OR reduce production expr -> expr NEQ expr 
-- On NEQ reduce production expr -> expr NEQ expr 
-- On IN reduce production expr -> expr NEQ expr 
-- On EQ reduce production expr -> expr NEQ expr 
-- On COMMA reduce production expr -> expr NEQ expr 
-- On ASSIGN reduce production expr -> expr NEQ expr 
-- On AND reduce production expr -> expr NEQ expr 

State 113:
expr -> expr MPLUS . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 114

State 114:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr MPLUS expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On MTIMES shift to state 101
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr MPLUS expr 
-- On RSQBRACE reduce production expr -> expr MPLUS expr 
-- On RPAREN reduce production expr -> expr MPLUS expr 
-- On PLUSEQ reduce production expr -> expr MPLUS expr 
-- On PLUS reduce production expr -> expr MPLUS expr 
-- On OR reduce production expr -> expr MPLUS expr 
-- On NEQ reduce production expr -> expr MPLUS expr 
-- On MPLUS reduce production expr -> expr MPLUS expr 
-- On MMINUS reduce production expr -> expr MPLUS expr 
-- On MINUS reduce production expr -> expr MPLUS expr 
-- On MEQ reduce production expr -> expr MPLUS expr 
-- On LT reduce production expr -> expr MPLUS expr 
-- On LEQ reduce production expr -> expr MPLUS expr 
-- On IN reduce production expr -> expr MPLUS expr 
-- On GT reduce production expr -> expr MPLUS expr 
-- On GEQ reduce production expr -> expr MPLUS expr 
-- On EQ reduce production expr -> expr MPLUS expr 
-- On COMMA reduce production expr -> expr MPLUS expr 
-- On ASSIGN reduce production expr -> expr MPLUS expr 
-- On AND reduce production expr -> expr MPLUS expr 

State 115:
expr -> expr MMINUS . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 116

State 116:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr MMINUS expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On MTIMES shift to state 101
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr MMINUS expr 
-- On RSQBRACE reduce production expr -> expr MMINUS expr 
-- On RPAREN reduce production expr -> expr MMINUS expr 
-- On PLUSEQ reduce production expr -> expr MMINUS expr 
-- On PLUS reduce production expr -> expr MMINUS expr 
-- On OR reduce production expr -> expr MMINUS expr 
-- On NEQ reduce production expr -> expr MMINUS expr 
-- On MPLUS reduce production expr -> expr MMINUS expr 
-- On MMINUS reduce production expr -> expr MMINUS expr 
-- On MINUS reduce production expr -> expr MMINUS expr 
-- On MEQ reduce production expr -> expr MMINUS expr 
-- On LT reduce production expr -> expr MMINUS expr 
-- On LEQ reduce production expr -> expr MMINUS expr 
-- On IN reduce production expr -> expr MMINUS expr 
-- On GT reduce production expr -> expr MMINUS expr 
-- On GEQ reduce production expr -> expr MMINUS expr 
-- On EQ reduce production expr -> expr MMINUS expr 
-- On COMMA reduce production expr -> expr MMINUS expr 
-- On ASSIGN reduce production expr -> expr MMINUS expr 
-- On AND reduce production expr -> expr MMINUS expr 

State 117:
expr -> expr MINUS . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 118

State 118:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr MINUS expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On MTIMES shift to state 101
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr MINUS expr 
-- On RSQBRACE reduce production expr -> expr MINUS expr 
-- On RPAREN reduce production expr -> expr MINUS expr 
-- On PLUSEQ reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On MPLUS reduce production expr -> expr MINUS expr 
-- On MMINUS reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On MEQ reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LEQ reduce production expr -> expr MINUS expr 
-- On IN reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GEQ reduce production expr -> expr MINUS expr 
-- On EQ reduce production expr -> expr MINUS expr 
-- On COMMA reduce production expr -> expr MINUS expr 
-- On ASSIGN reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 119:
expr -> expr MEQ . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 120

State 120:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr MEQ expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr MEQ expr 
-- On RSQBRACE reduce production expr -> expr MEQ expr 
-- On RPAREN reduce production expr -> expr MEQ expr 
-- On OR reduce production expr -> expr MEQ expr 
-- On NEQ reduce production expr -> expr MEQ expr 
-- On MEQ reduce production expr -> expr MEQ expr 
-- On LT reduce production expr -> expr MEQ expr 
-- On LEQ reduce production expr -> expr MEQ expr 
-- On IN reduce production expr -> expr MEQ expr 
-- On GT reduce production expr -> expr MEQ expr 
-- On GEQ reduce production expr -> expr MEQ expr 
-- On EQ reduce production expr -> expr MEQ expr 
-- On COMMA reduce production expr -> expr MEQ expr 
-- On ASSIGN reduce production expr -> expr MEQ expr 
-- On AND reduce production expr -> expr MEQ expr 

State 121:
expr -> expr LT . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 122

State 122:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr LT expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr LT expr 
-- On RSQBRACE reduce production expr -> expr LT expr 
-- On RPAREN reduce production expr -> expr LT expr 
-- On OR reduce production expr -> expr LT expr 
-- On NEQ reduce production expr -> expr LT expr 
-- On MEQ reduce production expr -> expr LT expr 
-- On LT reduce production expr -> expr LT expr 
-- On LEQ reduce production expr -> expr LT expr 
-- On IN reduce production expr -> expr LT expr 
-- On GT reduce production expr -> expr LT expr 
-- On GEQ reduce production expr -> expr LT expr 
-- On EQ reduce production expr -> expr LT expr 
-- On COMMA reduce production expr -> expr LT expr 
-- On ASSIGN reduce production expr -> expr LT expr 
-- On AND reduce production expr -> expr LT expr 

State 123:
expr -> expr LEQ . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 124

State 124:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr LEQ expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr LEQ expr 
-- On RSQBRACE reduce production expr -> expr LEQ expr 
-- On RPAREN reduce production expr -> expr LEQ expr 
-- On OR reduce production expr -> expr LEQ expr 
-- On NEQ reduce production expr -> expr LEQ expr 
-- On MEQ reduce production expr -> expr LEQ expr 
-- On LT reduce production expr -> expr LEQ expr 
-- On LEQ reduce production expr -> expr LEQ expr 
-- On IN reduce production expr -> expr LEQ expr 
-- On GT reduce production expr -> expr LEQ expr 
-- On GEQ reduce production expr -> expr LEQ expr 
-- On EQ reduce production expr -> expr LEQ expr 
-- On COMMA reduce production expr -> expr LEQ expr 
-- On ASSIGN reduce production expr -> expr LEQ expr 
-- On AND reduce production expr -> expr LEQ expr 

State 125:
expr -> expr GT . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 126

State 126:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr GT expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr GT expr 
-- On RSQBRACE reduce production expr -> expr GT expr 
-- On RPAREN reduce production expr -> expr GT expr 
-- On OR reduce production expr -> expr GT expr 
-- On NEQ reduce production expr -> expr GT expr 
-- On MEQ reduce production expr -> expr GT expr 
-- On LT reduce production expr -> expr GT expr 
-- On LEQ reduce production expr -> expr GT expr 
-- On IN reduce production expr -> expr GT expr 
-- On GT reduce production expr -> expr GT expr 
-- On GEQ reduce production expr -> expr GT expr 
-- On EQ reduce production expr -> expr GT expr 
-- On COMMA reduce production expr -> expr GT expr 
-- On ASSIGN reduce production expr -> expr GT expr 
-- On AND reduce production expr -> expr GT expr 

State 127:
expr -> expr GEQ . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 128

State 128:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr GEQ expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MDIVIDE shift to state 103
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr GEQ expr 
-- On RSQBRACE reduce production expr -> expr GEQ expr 
-- On RPAREN reduce production expr -> expr GEQ expr 
-- On OR reduce production expr -> expr GEQ expr 
-- On NEQ reduce production expr -> expr GEQ expr 
-- On MEQ reduce production expr -> expr GEQ expr 
-- On LT reduce production expr -> expr GEQ expr 
-- On LEQ reduce production expr -> expr GEQ expr 
-- On IN reduce production expr -> expr GEQ expr 
-- On GT reduce production expr -> expr GEQ expr 
-- On GEQ reduce production expr -> expr GEQ expr 
-- On EQ reduce production expr -> expr GEQ expr 
-- On COMMA reduce production expr -> expr GEQ expr 
-- On ASSIGN reduce production expr -> expr GEQ expr 
-- On AND reduce production expr -> expr GEQ expr 

State 129:
expr -> expr EQ . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 130

State 130:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr EQ expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr EQ expr 
-- On RSQBRACE reduce production expr -> expr EQ expr 
-- On RPAREN reduce production expr -> expr EQ expr 
-- On OR reduce production expr -> expr EQ expr 
-- On NEQ reduce production expr -> expr EQ expr 
-- On IN reduce production expr -> expr EQ expr 
-- On EQ reduce production expr -> expr EQ expr 
-- On COMMA reduce production expr -> expr EQ expr 
-- On ASSIGN reduce production expr -> expr EQ expr 
-- On AND reduce production expr -> expr EQ expr 

State 131:
expr -> expr AND . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 132

State 132:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr AND expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On SEMI reduce production expr -> expr AND expr 
-- On RSQBRACE reduce production expr -> expr AND expr 
-- On RPAREN reduce production expr -> expr AND expr 
-- On OR reduce production expr -> expr AND expr 
-- On IN reduce production expr -> expr AND expr 
-- On COMMA reduce production expr -> expr AND expr 
-- On ASSIGN reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 

State 133:
expr -> expr ASSIGN . expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 134

State 134:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr ASSIGN expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131
-- On SEMI reduce production expr -> expr ASSIGN expr 
-- On RSQBRACE reduce production expr -> expr ASSIGN expr 
-- On RPAREN reduce production expr -> expr ASSIGN expr 
-- On IN reduce production expr -> expr ASSIGN expr 
-- On COMMA reduce production expr -> expr ASSIGN expr 

State 135:
expr -> ID LPERCENT . INT_LIT RPERCENT [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On INT_LIT shift to state 136

State 136:
expr -> ID LPERCENT INT_LIT . RPERCENT [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On RPERCENT shift to state 137

State 137:
expr -> ID LPERCENT INT_LIT RPERCENT . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On SEMI reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On RSQBRACE reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On RPAREN reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On PLUSEQ reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On PLUS reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On OR reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On NEQ reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On MTIMES reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On MPLUS reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On MMINUS reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On MINUS reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On MEQ reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On MDIVIDE reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On LT reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On LEQ reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On IN reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On GT reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On GEQ reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On EQ reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On DIVIDE reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On COMMA reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On ASSIGN reduce production expr -> ID LPERCENT INT_LIT RPERCENT 
-- On AND reduce production expr -> ID LPERCENT INT_LIT RPERCENT 

State 138:
expr -> ID LPAREN . actuals_opt RPAREN [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 139
-- On actuals_opt shift to state 140
-- On actuals_list shift to state 142
-- On RPAREN reduce production actuals_opt -> 

State 139:
actuals_list -> expr . [ RPAREN COMMA ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131
-- On RPAREN reduce production actuals_list -> expr 
-- On COMMA reduce production actuals_list -> expr 

State 140:
expr -> ID LPAREN actuals_opt . RPAREN [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On RPAREN shift to state 141

State 141:
expr -> ID LPAREN actuals_opt RPAREN . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On SEMI reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On RSQBRACE reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On RPAREN reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On PLUSEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On PLUS reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On OR reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On NEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On MTIMES reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On MPLUS reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On MMINUS reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On MINUS reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On MEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On MDIVIDE reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On LT reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On LEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On IN reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On GT reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On GEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On EQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On DIVIDE reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On COMMA reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On ASSIGN reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On AND reduce production expr -> ID LPAREN actuals_opt RPAREN 

State 142:
actuals_list -> actuals_list . COMMA expr [ RPAREN COMMA ]
actuals_opt -> actuals_list . [ RPAREN ]
-- On COMMA shift to state 143
-- On RPAREN reduce production actuals_opt -> actuals_list 

State 143:
actuals_list -> actuals_list COMMA . expr [ RPAREN COMMA ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 144

State 144:
actuals_list -> actuals_list COMMA expr . [ RPAREN COMMA ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131
-- On RPAREN reduce production actuals_list -> actuals_list COMMA expr 
-- On COMMA reduce production actuals_list -> actuals_list COMMA expr 

State 145:
expr -> expr . PLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> LPAREN expr . RPAREN [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES shift to state 96
-- On RPAREN shift to state 146
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 146:
expr -> LPAREN expr RPAREN . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> LPAREN expr RPAREN 
-- On SEMI reduce production expr -> LPAREN expr RPAREN 
-- On RSQBRACE reduce production expr -> LPAREN expr RPAREN 
-- On RPAREN reduce production expr -> LPAREN expr RPAREN 
-- On PLUSEQ reduce production expr -> LPAREN expr RPAREN 
-- On PLUS reduce production expr -> LPAREN expr RPAREN 
-- On OR reduce production expr -> LPAREN expr RPAREN 
-- On NEQ reduce production expr -> LPAREN expr RPAREN 
-- On MTIMES reduce production expr -> LPAREN expr RPAREN 
-- On MPLUS reduce production expr -> LPAREN expr RPAREN 
-- On MMINUS reduce production expr -> LPAREN expr RPAREN 
-- On MINUS reduce production expr -> LPAREN expr RPAREN 
-- On MEQ reduce production expr -> LPAREN expr RPAREN 
-- On MDIVIDE reduce production expr -> LPAREN expr RPAREN 
-- On LT reduce production expr -> LPAREN expr RPAREN 
-- On LEQ reduce production expr -> LPAREN expr RPAREN 
-- On IN reduce production expr -> LPAREN expr RPAREN 
-- On GT reduce production expr -> LPAREN expr RPAREN 
-- On GEQ reduce production expr -> LPAREN expr RPAREN 
-- On EQ reduce production expr -> LPAREN expr RPAREN 
-- On DIVIDE reduce production expr -> LPAREN expr RPAREN 
-- On COMMA reduce production expr -> LPAREN expr RPAREN 
-- On ASSIGN reduce production expr -> LPAREN expr RPAREN 
-- On AND reduce production expr -> LPAREN expr RPAREN 

State 147:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> MINUS expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> MINUS expr 
-- On SEMI reduce production expr -> MINUS expr 
-- On RSQBRACE reduce production expr -> MINUS expr 
-- On RPAREN reduce production expr -> MINUS expr 
-- On PLUSEQ reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On OR reduce production expr -> MINUS expr 
-- On NEQ reduce production expr -> MINUS expr 
-- On MTIMES reduce production expr -> MINUS expr 
-- On MPLUS reduce production expr -> MINUS expr 
-- On MMINUS reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On MEQ reduce production expr -> MINUS expr 
-- On MDIVIDE reduce production expr -> MINUS expr 
-- On LT reduce production expr -> MINUS expr 
-- On LEQ reduce production expr -> MINUS expr 
-- On IN reduce production expr -> MINUS expr 
-- On GT reduce production expr -> MINUS expr 
-- On GEQ reduce production expr -> MINUS expr 
-- On EQ reduce production expr -> MINUS expr 
-- On DIVIDE reduce production expr -> MINUS expr 
-- On COMMA reduce production expr -> MINUS expr 
-- On ASSIGN reduce production expr -> MINUS expr 
-- On AND reduce production expr -> MINUS expr 

State 148:
expr -> expr . PLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> NOT expr . [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI RSQBRACE RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE COMMA ASSIGN AND ]
-- On TIMES reduce production expr -> NOT expr 
-- On SEMI reduce production expr -> NOT expr 
-- On RSQBRACE reduce production expr -> NOT expr 
-- On RPAREN reduce production expr -> NOT expr 
-- On PLUSEQ reduce production expr -> NOT expr 
-- On PLUS reduce production expr -> NOT expr 
-- On OR reduce production expr -> NOT expr 
-- On NEQ reduce production expr -> NOT expr 
-- On MTIMES reduce production expr -> NOT expr 
-- On MPLUS reduce production expr -> NOT expr 
-- On MMINUS reduce production expr -> NOT expr 
-- On MINUS reduce production expr -> NOT expr 
-- On MEQ reduce production expr -> NOT expr 
-- On MDIVIDE reduce production expr -> NOT expr 
-- On LT reduce production expr -> NOT expr 
-- On LEQ reduce production expr -> NOT expr 
-- On IN reduce production expr -> NOT expr 
-- On GT reduce production expr -> NOT expr 
-- On GEQ reduce production expr -> NOT expr 
-- On EQ reduce production expr -> NOT expr 
-- On DIVIDE reduce production expr -> NOT expr 
-- On COMMA reduce production expr -> NOT expr 
-- On ASSIGN reduce production expr -> NOT expr 
-- On AND reduce production expr -> NOT expr 

State 149:
expr -> expr . PLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
stmt -> WHILE LPAREN expr . RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TIMES shift to state 96
-- On RPAREN shift to state 150
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 150:
stmt -> WHILE LPAREN expr RPAREN . stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE shift to state 40
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On RETURN shift to state 151
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On LBRACE shift to state 155
-- On INT_LIT shift to state 48
-- On IF shift to state 158
-- On ID shift to state 78
-- On FOR shift to state 162
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On stmt shift to state 183
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 171

State 151:
stmt -> RETURN . SEMI [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> RETURN . expr SEMI [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On SEMI shift to state 152
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 153

State 152:
stmt -> RETURN SEMI . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> RETURN SEMI 
-- On TRUE reduce production stmt -> RETURN SEMI 
-- On STRING_LIT reduce production stmt -> RETURN SEMI 
-- On RETURN reduce production stmt -> RETURN SEMI 
-- On RBRACE reduce production stmt -> RETURN SEMI 
-- On NOT reduce production stmt -> RETURN SEMI 
-- On MINUS reduce production stmt -> RETURN SEMI 
-- On LSQBRACE reduce production stmt -> RETURN SEMI 
-- On LPERCENT reduce production stmt -> RETURN SEMI 
-- On LPAREN reduce production stmt -> RETURN SEMI 
-- On LMPERCENT reduce production stmt -> RETURN SEMI 
-- On LBRACE reduce production stmt -> RETURN SEMI 
-- On INT_LIT reduce production stmt -> RETURN SEMI 
-- On IF reduce production stmt -> RETURN SEMI 
-- On ID reduce production stmt -> RETURN SEMI 
-- On FOR reduce production stmt -> RETURN SEMI 
-- On FLOAT_LIT reduce production stmt -> RETURN SEMI 
-- On FALSE reduce production stmt -> RETURN SEMI 
-- On ELSE reduce production stmt -> RETURN SEMI 

State 153:
expr -> expr . PLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
stmt -> RETURN expr . SEMI [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TIMES shift to state 96
-- On SEMI shift to state 154
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 154:
stmt -> RETURN expr SEMI . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> RETURN expr SEMI 
-- On TRUE reduce production stmt -> RETURN expr SEMI 
-- On STRING_LIT reduce production stmt -> RETURN expr SEMI 
-- On RETURN reduce production stmt -> RETURN expr SEMI 
-- On RBRACE reduce production stmt -> RETURN expr SEMI 
-- On NOT reduce production stmt -> RETURN expr SEMI 
-- On MINUS reduce production stmt -> RETURN expr SEMI 
-- On LSQBRACE reduce production stmt -> RETURN expr SEMI 
-- On LPERCENT reduce production stmt -> RETURN expr SEMI 
-- On LPAREN reduce production stmt -> RETURN expr SEMI 
-- On LMPERCENT reduce production stmt -> RETURN expr SEMI 
-- On LBRACE reduce production stmt -> RETURN expr SEMI 
-- On INT_LIT reduce production stmt -> RETURN expr SEMI 
-- On IF reduce production stmt -> RETURN expr SEMI 
-- On ID reduce production stmt -> RETURN expr SEMI 
-- On FOR reduce production stmt -> RETURN expr SEMI 
-- On FLOAT_LIT reduce production stmt -> RETURN expr SEMI 
-- On FALSE reduce production stmt -> RETURN expr SEMI 
-- On ELSE reduce production stmt -> RETURN expr SEMI 

State 155:
stmt -> LBRACE . stmt_list RBRACE [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On stmt_list shift to state 156
-- On WHILE reduce production stmt_list -> 
-- On TRUE reduce production stmt_list -> 
-- On STRING_LIT reduce production stmt_list -> 
-- On RETURN reduce production stmt_list -> 
-- On RBRACE reduce production stmt_list -> 
-- On NOT reduce production stmt_list -> 
-- On MINUS reduce production stmt_list -> 
-- On LSQBRACE reduce production stmt_list -> 
-- On LPERCENT reduce production stmt_list -> 
-- On LPAREN reduce production stmt_list -> 
-- On LMPERCENT reduce production stmt_list -> 
-- On LBRACE reduce production stmt_list -> 
-- On INT_LIT reduce production stmt_list -> 
-- On IF reduce production stmt_list -> 
-- On ID reduce production stmt_list -> 
-- On FOR reduce production stmt_list -> 
-- On FLOAT_LIT reduce production stmt_list -> 
-- On FALSE reduce production stmt_list -> 

State 156:
stmt -> LBRACE stmt_list . RBRACE [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt_list -> stmt_list . stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ]
-- On WHILE shift to state 40
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On RETURN shift to state 151
-- On RBRACE shift to state 157
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On LBRACE shift to state 155
-- On INT_LIT shift to state 48
-- On IF shift to state 158
-- On ID shift to state 78
-- On FOR shift to state 162
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On stmt shift to state 182
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 171

State 157:
stmt -> LBRACE stmt_list RBRACE . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> LBRACE stmt_list RBRACE 
-- On TRUE reduce production stmt -> LBRACE stmt_list RBRACE 
-- On STRING_LIT reduce production stmt -> LBRACE stmt_list RBRACE 
-- On RETURN reduce production stmt -> LBRACE stmt_list RBRACE 
-- On RBRACE reduce production stmt -> LBRACE stmt_list RBRACE 
-- On NOT reduce production stmt -> LBRACE stmt_list RBRACE 
-- On MINUS reduce production stmt -> LBRACE stmt_list RBRACE 
-- On LSQBRACE reduce production stmt -> LBRACE stmt_list RBRACE 
-- On LPERCENT reduce production stmt -> LBRACE stmt_list RBRACE 
-- On LPAREN reduce production stmt -> LBRACE stmt_list RBRACE 
-- On LMPERCENT reduce production stmt -> LBRACE stmt_list RBRACE 
-- On LBRACE reduce production stmt -> LBRACE stmt_list RBRACE 
-- On INT_LIT reduce production stmt -> LBRACE stmt_list RBRACE 
-- On IF reduce production stmt -> LBRACE stmt_list RBRACE 
-- On ID reduce production stmt -> LBRACE stmt_list RBRACE 
-- On FOR reduce production stmt -> LBRACE stmt_list RBRACE 
-- On FLOAT_LIT reduce production stmt -> LBRACE stmt_list RBRACE 
-- On FALSE reduce production stmt -> LBRACE stmt_list RBRACE 
-- On ELSE reduce production stmt -> LBRACE stmt_list RBRACE 

State 158:
stmt -> IF . LPAREN expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> IF . LPAREN expr RPAREN stmt ELSE stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On LPAREN shift to state 159

State 159:
stmt -> IF LPAREN . expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> IF LPAREN . expr RPAREN stmt ELSE stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 160

State 160:
expr -> expr . PLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
stmt -> IF LPAREN expr . RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> IF LPAREN expr . RPAREN stmt ELSE stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TIMES shift to state 96
-- On RPAREN shift to state 161
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 161:
stmt -> IF LPAREN expr RPAREN . stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> IF LPAREN expr RPAREN . stmt ELSE stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE shift to state 40
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On RETURN shift to state 151
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On LBRACE shift to state 155
-- On INT_LIT shift to state 48
-- On IF shift to state 158
-- On ID shift to state 78
-- On FOR shift to state 162
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On stmt shift to state 179
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 171

State 162:
stmt -> FOR . LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> FOR . LPAREN expr IN expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On LPAREN shift to state 163

State 163:
stmt -> FOR LPAREN . expr_opt SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> FOR LPAREN . expr IN expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr_opt shift to state 164
-- On expr shift to state 174
-- On SEMI reduce production expr_opt -> 

State 164:
stmt -> FOR LPAREN expr_opt . SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On SEMI shift to state 165

State 165:
stmt -> FOR LPAREN expr_opt SEMI . expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 166

State 166:
expr -> expr . PLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
stmt -> FOR LPAREN expr_opt SEMI expr . SEMI expr_opt RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TIMES shift to state 96
-- On SEMI shift to state 167
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 167:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI . expr_opt RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr_opt shift to state 168
-- On expr shift to state 173
-- On RPAREN reduce production expr_opt -> 

State 168:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt . RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On RPAREN shift to state 169

State 169:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN . stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE shift to state 40
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On RETURN shift to state 151
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On LBRACE shift to state 155
-- On INT_LIT shift to state 48
-- On IF shift to state 158
-- On ID shift to state 78
-- On FOR shift to state 162
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On stmt shift to state 170
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 171

State 170:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On TRUE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On STRING_LIT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On RETURN reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On RBRACE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On NOT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On MINUS reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On LSQBRACE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On LPERCENT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On LPAREN reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On LMPERCENT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On LBRACE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On INT_LIT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On IF reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On ID reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On FOR reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On FLOAT_LIT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On FALSE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On ELSE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 

State 171:
expr -> expr . PLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
stmt -> expr . SEMI [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TIMES shift to state 96
-- On SEMI shift to state 172
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 172:
stmt -> expr SEMI . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> expr SEMI 
-- On TRUE reduce production stmt -> expr SEMI 
-- On STRING_LIT reduce production stmt -> expr SEMI 
-- On RETURN reduce production stmt -> expr SEMI 
-- On RBRACE reduce production stmt -> expr SEMI 
-- On NOT reduce production stmt -> expr SEMI 
-- On MINUS reduce production stmt -> expr SEMI 
-- On LSQBRACE reduce production stmt -> expr SEMI 
-- On LPERCENT reduce production stmt -> expr SEMI 
-- On LPAREN reduce production stmt -> expr SEMI 
-- On LMPERCENT reduce production stmt -> expr SEMI 
-- On LBRACE reduce production stmt -> expr SEMI 
-- On INT_LIT reduce production stmt -> expr SEMI 
-- On IF reduce production stmt -> expr SEMI 
-- On ID reduce production stmt -> expr SEMI 
-- On FOR reduce production stmt -> expr SEMI 
-- On FLOAT_LIT reduce production stmt -> expr SEMI 
-- On FALSE reduce production stmt -> expr SEMI 
-- On ELSE reduce production stmt -> expr SEMI 

State 173:
expr -> expr . PLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr_opt -> expr . [ RPAREN ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131
-- On RPAREN reduce production expr_opt -> expr 

State 174:
expr -> expr . PLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES SEMI PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ IN GT GEQ EQ DIVIDE ASSIGN AND ]
expr_opt -> expr . [ SEMI ]
stmt -> FOR LPAREN expr . IN expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TIMES shift to state 96
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On IN shift to state 175
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131
-- On SEMI reduce production expr_opt -> expr 

State 175:
stmt -> FOR LPAREN expr IN . expr RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On INT_LIT shift to state 48
-- On ID shift to state 78
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 176

State 176:
expr -> expr . PLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MPLUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MMINUS expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MTIMES expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MDIVIDE expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . MEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . PLUSEQ expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
expr -> expr . ASSIGN expr [ TIMES RPAREN PLUSEQ PLUS OR NEQ MTIMES MPLUS MMINUS MINUS MEQ MDIVIDE LT LEQ GT GEQ EQ DIVIDE ASSIGN AND ]
stmt -> FOR LPAREN expr IN expr . RPAREN stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On TIMES shift to state 96
-- On RPAREN shift to state 177
-- On PLUSEQ shift to state 99
-- On PLUS shift to state 107
-- On OR shift to state 109
-- On NEQ shift to state 111
-- On MTIMES shift to state 101
-- On MPLUS shift to state 113
-- On MMINUS shift to state 115
-- On MINUS shift to state 117
-- On MEQ shift to state 119
-- On MDIVIDE shift to state 103
-- On LT shift to state 121
-- On LEQ shift to state 123
-- On GT shift to state 125
-- On GEQ shift to state 127
-- On EQ shift to state 129
-- On DIVIDE shift to state 105
-- On ASSIGN shift to state 133
-- On AND shift to state 131

State 177:
stmt -> FOR LPAREN expr IN expr RPAREN . stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE shift to state 40
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On RETURN shift to state 151
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On LBRACE shift to state 155
-- On INT_LIT shift to state 48
-- On IF shift to state 158
-- On ID shift to state 78
-- On FOR shift to state 162
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On stmt shift to state 178
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 171

State 178:
stmt -> FOR LPAREN expr IN expr RPAREN stmt . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On TRUE reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On STRING_LIT reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On RETURN reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On RBRACE reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On NOT reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On MINUS reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On LSQBRACE reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On LPERCENT reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On LPAREN reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On LMPERCENT reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On LBRACE reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On INT_LIT reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On IF reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On ID reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On FOR reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On FLOAT_LIT reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On FALSE reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 
-- On ELSE reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt 

State 179:
stmt -> IF LPAREN expr RPAREN stmt . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
stmt -> IF LPAREN expr RPAREN stmt . ELSE stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On ELSE shift to state 180
-- On WHILE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On TRUE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On STRING_LIT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On RETURN reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On RBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On NOT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On MINUS reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On LSQBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On LPERCENT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On LPAREN reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On LMPERCENT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On LBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On INT_LIT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On IF reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On ID reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On FOR reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On FLOAT_LIT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On FALSE reduce production stmt -> IF LPAREN expr RPAREN stmt 

State 180:
stmt -> IF LPAREN expr RPAREN stmt ELSE . stmt [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE shift to state 40
-- On TRUE shift to state 42
-- On STRING_LIT shift to state 43
-- On RETURN shift to state 151
-- On NOT shift to state 44
-- On MINUS shift to state 45
-- On LSQBRACE shift to state 46
-- On LPERCENT shift to state 47
-- On LPAREN shift to state 66
-- On LMPERCENT shift to state 67
-- On LBRACE shift to state 155
-- On INT_LIT shift to state 48
-- On IF shift to state 158
-- On ID shift to state 78
-- On FOR shift to state 162
-- On FLOAT_LIT shift to state 49
-- On FALSE shift to state 50
-- On tuple_literal shift to state 92
-- On stmt shift to state 181
-- On primitives shift to state 93
-- On literals shift to state 94
-- On expr shift to state 171

State 181:
stmt -> IF LPAREN expr RPAREN stmt ELSE stmt . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On TRUE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On STRING_LIT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On RETURN reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On RBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On NOT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On MINUS reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On LSQBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On LPERCENT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On LPAREN reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On LMPERCENT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On LBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On INT_LIT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On IF reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On ID reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On FOR reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On FLOAT_LIT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On FALSE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On ELSE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 

State 182:
stmt_list -> stmt_list stmt . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ]
-- On WHILE reduce production stmt_list -> stmt_list stmt 
-- On TRUE reduce production stmt_list -> stmt_list stmt 
-- On STRING_LIT reduce production stmt_list -> stmt_list stmt 
-- On RETURN reduce production stmt_list -> stmt_list stmt 
-- On RBRACE reduce production stmt_list -> stmt_list stmt 
-- On NOT reduce production stmt_list -> stmt_list stmt 
-- On MINUS reduce production stmt_list -> stmt_list stmt 
-- On LSQBRACE reduce production stmt_list -> stmt_list stmt 
-- On LPERCENT reduce production stmt_list -> stmt_list stmt 
-- On LPAREN reduce production stmt_list -> stmt_list stmt 
-- On LMPERCENT reduce production stmt_list -> stmt_list stmt 
-- On LBRACE reduce production stmt_list -> stmt_list stmt 
-- On INT_LIT reduce production stmt_list -> stmt_list stmt 
-- On IF reduce production stmt_list -> stmt_list stmt 
-- On ID reduce production stmt_list -> stmt_list stmt 
-- On FOR reduce production stmt_list -> stmt_list stmt 
-- On FLOAT_LIT reduce production stmt_list -> stmt_list stmt 
-- On FALSE reduce production stmt_list -> stmt_list stmt 

State 183:
stmt -> WHILE LPAREN expr RPAREN stmt . [ WHILE TRUE STRING_LIT RETURN RBRACE NOT MINUS LSQBRACE LPERCENT LPAREN LMPERCENT LBRACE INT_LIT IF ID FOR FLOAT_LIT FALSE ELSE ]
-- On WHILE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On TRUE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On STRING_LIT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On RETURN reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On RBRACE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On NOT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On MINUS reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On LSQBRACE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On LPERCENT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On LPAREN reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On LMPERCENT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On LBRACE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On INT_LIT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On IF reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On ID reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On FOR reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On FLOAT_LIT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On FALSE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On ELSE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 

State 184:
fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE . [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On VOID reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On STRING reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On ROW reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On MATRIX reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On INT reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On FLOAT reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On FILE reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On EOF reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On DEF reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 
-- On BOOL reduce production fdecl -> DEF typ ID LPAREN formals_opt RPAREN LBRACE vdecl_list stmt_list RBRACE 

State 185:
formal_list -> formal_list . COMMA typ ID [ RPAREN COMMA ]
formals_opt -> formal_list . [ RPAREN ]
-- On COMMA shift to state 186
-- On RPAREN reduce production formals_opt -> formal_list 

State 186:
formal_list -> formal_list COMMA . typ ID [ RPAREN COMMA ]
-- On VOID shift to state 3
-- On STRING shift to state 4
-- On ROW shift to state 5
-- On MATRIX shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FILE shift to state 9
-- On BOOL shift to state 12
-- On typ shift to state 187
-- On tuple_typ shift to state 18
-- On row_typ shift to state 19
-- On primitive shift to state 20
-- On matrix_typ shift to state 30

State 187:
formal_list -> formal_list COMMA typ . ID [ RPAREN COMMA ]
-- On ID shift to state 188

State 188:
formal_list -> formal_list COMMA typ ID . [ RPAREN COMMA ]
-- On RPAREN reduce production formal_list -> formal_list COMMA typ ID 
-- On COMMA reduce production formal_list -> formal_list COMMA typ ID 

State 189:
decls -> decls vdecl . [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On VOID reduce production decls -> decls vdecl 
-- On STRING reduce production decls -> decls vdecl 
-- On ROW reduce production decls -> decls vdecl 
-- On MATRIX reduce production decls -> decls vdecl 
-- On INT reduce production decls -> decls vdecl 
-- On FLOAT reduce production decls -> decls vdecl 
-- On FILE reduce production decls -> decls vdecl 
-- On EOF reduce production decls -> decls vdecl 
-- On DEF reduce production decls -> decls vdecl 
-- On BOOL reduce production decls -> decls vdecl 

State 190:
decls -> decls fdecl . [ VOID STRING ROW MATRIX INT FLOAT FILE EOF DEF BOOL ]
-- On VOID reduce production decls -> decls fdecl 
-- On STRING reduce production decls -> decls fdecl 
-- On ROW reduce production decls -> decls fdecl 
-- On MATRIX reduce production decls -> decls fdecl 
-- On INT reduce production decls -> decls fdecl 
-- On FLOAT reduce production decls -> decls fdecl 
-- On FILE reduce production decls -> decls fdecl 
-- On EOF reduce production decls -> decls fdecl 
-- On DEF reduce production decls -> decls fdecl 
-- On BOOL reduce production decls -> decls fdecl 

